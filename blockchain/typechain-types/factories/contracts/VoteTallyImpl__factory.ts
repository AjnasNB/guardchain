/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  VoteTallyImpl,
  VoteTallyImplInterface,
} from "../../contracts/VoteTallyImpl";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governanceToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        internalType: "uint16",
        name: "baseBps",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "stakeLightBps",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "stakeHeavyBps",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "localitySameBps",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "expertiseMatchBps",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "wMaxBps",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "baseBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "stakeLightBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "stakeHeavyBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "localitySameBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "expertiseMatchBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "wMaxBps",
            type: "uint16",
          },
        ],
        internalType: "struct IVoteTally.WeightsConfig",
        name: "cfg",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[]",
        name: "payoutBps",
        type: "uint16[]",
      },
      {
        internalType: "uint16[]",
        name: "confidenceBps",
        type: "uint16[]",
      },
      {
        internalType: "uint16[]",
        name: "repBps",
        type: "uint16[]",
      },
      {
        internalType: "uint8[]",
        name: "stakeTier",
        type: "uint8[]",
      },
      {
        internalType: "bool[]",
        name: "isLocal",
        type: "bool[]",
      },
      {
        internalType: "bool[]",
        name: "hasExpertise",
        type: "bool[]",
      },
      {
        internalType: "uint16",
        name: "quorumRequired",
        type: "uint16",
      },
    ],
    name: "tally",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "payoutBps",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "verdict",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "quorum",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "required",
            type: "uint16",
          },
        ],
        internalType: "struct IVoteTally.Tallied",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c03461011f57601f6108f338819003918201601f19168301926001600160401b039290918385118386101761010957816060928492604097885283398101031261011f5761004d81610124565b906100658461005e60208401610124565b9201610124565b60809290925260a052600080546001600160a01b0319166001600160a01b0390921691909117905581519060c08201908111828210176101095782526127108152612af8602082018190526130d4838301526060820152612cec6080820152613a9860a090910152600180546001600160601b0319166b3a982cec2af830d42af82710179055516107ba90816101398239608051816078015260a0518161061a0152f35b634e487b7160e01b600052604160045260246000fd5b600080fd5b51906001600160a01b038216820361011f5756fe6101a080604052600436101561001457600080fd5b60003560e01c9081635aa6e67514610607575080636193930e146101ed57806379502c5514610193578063c3f909d4146100d5578063f851a440146100ac5763f96dae0a1461006257600080fd5b346100a75760003660031901126100a7576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b600080fd5b346100a75760003660031901126100a7576000546040516001600160a01b039091168152602090f35b346100a75760003660031901126100a757600060a06100f26106b0565b828152826020820152826040820152826060820152826080820152015260c06101196106b0565b60015461ffff9081808216938481528160208201818560101c1681528160408401818760201c168152816060860193818960301c1685528160a06080890198828c60401c168a52019960501c1689526040519a8b52511660208a0152511660408801525116606086015251166080840152511660a0820152f35b346100a75760003660031901126100a75760c06001546040519061ffff908181168352818160101c166020840152818160201c166040840152818160301c166060840152818160401c16608084015260501c1660a0820152f35b346100a75760e03660031901126100a75767ffffffffffffffff6004358181116100a75761021f903690600401610649565b60e0526024358281116100a75761023a903690600401610649565b608052610140526044358281116100a757610259903690600401610649565b92906064358281116100a757610273903690600401610649565b61010052936084358381116100a757610290903690600401610649565b9360a4359081116100a7576102a9903690600401610649565b909160c435806101205261ffff8116036100a757600060606102c961067a565b82815282602082015282604082015201526102e960805160e051146106d0565b6102f68460e051146106d0565b6103066101005160e051146106d0565b6103138660e051146106d0565b6103208260e051146106d0565b60006101805260008061016052600060c05260015460a0525b60e05160c0519081101561054857906104689161036c8b600161ffff60a051169361037160ff9485926101005186610714565b61073a565b16036104ef5750506127106103e9816103976104629461ffff60a05160101c1690610748565b045b6103af6103aa8d60c051908a610714565b61075b565b6104d4575b6103c46103aa60c0518a8c610714565b6104b9575b61ffff6103e26103dd8d8d60c05191610714565b610768565b1690610748565b048a61ffff60a05160501c168083116104af575b5061043d6104258361ffff61041f6103dd6104469660c0519060e05190610714565b16610748565b61ffff6103e26103dd60c05160805161014051610714565b61018051610777565b6101805261ffff6103e26103dd60c05160805161014051610714565b90610777565b9761ffff610160511661ffff8114610499576001016101605260c05160001981146104995760010160c05297610339565b634e487b7160e01b600052601160045260246000fd5b915061043d6103fd565b6104ce839161ffff60a05160401c1690610748565b046103c9565b6104e9839161ffff60a05160301c1690610748565b046103b4565b9061050761036c60029360c051906101005190610714565b161461051d575b6127106103e961046292610399565b506104626127106103e98161053e60a05161ffff808260201c169116610748565b049250505061050e565b506000811580156105d9575b506080915061ffff166000611a2c82106105bd575061ffff60025b8161057861067a565b84815260ff602082019316835260ff60606040830192846101605116845201938361012051168552604051968752511660208601525116604084015251166060820152f35b610ce48210156105d1575b61ffff9061056f565b5060016105c8565b90506105f15761ffff60809161018051041682610554565b634e487b7160e01b600052601260045260246000fd5b346100a75760003660031901126100a7577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9181601f840112156100a75782359167ffffffffffffffff83116100a7576020808501948460051b0101116100a757565b604051906080820182811067ffffffffffffffff82111761069a57604052565b634e487b7160e01b600052604160045260246000fd5b6040519060c0820182811067ffffffffffffffff82111761069a57604052565b156106d757565b60405162461bcd60e51b8152602060048201526015602482015274082e4e4c2f240d8cadccee8d040dad2e6dac2e8c6d605b1b6044820152606490fd5b91908110156107245760051b0190565b634e487b7160e01b600052603260045260246000fd5b3560ff811681036100a75790565b8181029291811591840414171561049957565b3580151581036100a75790565b3561ffff811681036100a75790565b919082018092116104995756fea26469706673582212203c52080dfe9cdc85eccc6aed73e2e1d6a3ea7c4ff83f5c21b83c5b42568d30ad64736f6c63430008140033";

type VoteTallyImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VoteTallyImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VoteTallyImpl__factory extends ContractFactory {
  constructor(...args: VoteTallyImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _governanceToken: AddressLike,
    _governance: AddressLike,
    _admin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _governanceToken,
      _governance,
      _admin,
      overrides || {}
    );
  }
  override deploy(
    _governanceToken: AddressLike,
    _governance: AddressLike,
    _admin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _governanceToken,
      _governance,
      _admin,
      overrides || {}
    ) as Promise<
      VoteTallyImpl & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VoteTallyImpl__factory {
    return super.connect(runner) as VoteTallyImpl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VoteTallyImplInterface {
    return new Interface(_abi) as VoteTallyImplInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VoteTallyImpl {
    return new Contract(address, _abi, runner) as unknown as VoteTallyImpl;
  }
}
