/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IVoteTally,
  IVoteTallyInterface,
} from "../../../contracts/VoteTally.sol/IVoteTally";

const _abi = [
  {
    inputs: [],
    name: "getConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "baseBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "stakeLightBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "stakeHeavyBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "localitySameBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "expertiseMatchBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "wMaxBps",
            type: "uint16",
          },
        ],
        internalType: "struct IVoteTally.WeightsConfig",
        name: "cfg",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[]",
        name: "payoutBps",
        type: "uint16[]",
      },
      {
        internalType: "uint16[]",
        name: "confidenceBps",
        type: "uint16[]",
      },
      {
        internalType: "uint16[]",
        name: "repBps",
        type: "uint16[]",
      },
      {
        internalType: "uint8[]",
        name: "stakeTier",
        type: "uint8[]",
      },
      {
        internalType: "bool[]",
        name: "isLocal",
        type: "bool[]",
      },
      {
        internalType: "bool[]",
        name: "hasExpertise",
        type: "bool[]",
      },
      {
        internalType: "uint16",
        name: "quorumRequired",
        type: "uint16",
      },
    ],
    name: "tally",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "payoutBps",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "verdict",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "quorum",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "required",
            type: "uint16",
          },
        ],
        internalType: "struct IVoteTally.Tallied",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IVoteTally__factory {
  static readonly abi = _abi;
  static createInterface(): IVoteTallyInterface {
    return new Interface(_abi) as IVoteTallyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IVoteTally {
    return new Contract(address, _abi, runner) as unknown as IVoteTally;
  }
}
