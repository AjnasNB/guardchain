/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AppealSystemImpl,
  AppealSystemImplInterface,
} from "../../contracts/AppealSystemImpl";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_claimsEngine",
        type: "address",
      },
      {
        internalType: "address",
        name: "_juryOracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "claimId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "payoutBps",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "AppealConcluded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "claimId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "appellant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "evidenceHash",
        type: "bytes32",
      },
    ],
    name: "AppealFiled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "claimId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "jurors",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "deadline",
        type: "uint64",
      },
    ],
    name: "AppealJurySelected",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "appealExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "appealJuries",
    outputs: [
      {
        internalType: "uint64",
        name: "deadline",
        type: "uint64",
      },
      {
        internalType: "uint8",
        name: "requiredVotes",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "concluded",
        type: "bool",
      },
      {
        internalType: "uint16",
        name: "payoutBps",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "appeals",
    outputs: [
      {
        internalType: "bytes32",
        name: "claimId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "appellant",
        type: "address",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "evidenceHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "processed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "claimId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "canFileAppeal",
    outputs: [
      {
        internalType: "bool",
        name: "canAppeal",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimsEngine",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "claimId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "evidenceHash",
        type: "bytes32",
      },
    ],
    name: "fileAppeal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "claimId",
        type: "bytes32",
      },
    ],
    name: "getAppeal",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "claimId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "appellant",
            type: "address",
          },
          {
            internalType: "string",
            name: "reason",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "evidenceHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "processed",
            type: "bool",
          },
        ],
        internalType: "struct IAppealSystem.AppealRequest",
        name: "appeal",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "claimId",
        type: "bytes32",
      },
    ],
    name: "getAppealJury",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "jurors",
            type: "address[]",
          },
          {
            internalType: "uint64",
            name: "deadline",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "requiredVotes",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "concluded",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "payoutBps",
            type: "uint16",
          },
        ],
        internalType: "struct IAppealSystem.AppealJury",
        name: "jury",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "claimId",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "count",
        type: "uint8",
      },
    ],
    name: "getReputationWeightedJurors",
    outputs: [
      {
        internalType: "address[]",
        name: "jurors",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "juryOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "claimId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "seed",
        type: "bytes32",
      },
    ],
    name: "selectAppealJury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "claimId",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "payoutBps",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "confidenceBps",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "rationaleHash",
        type: "bytes32",
      },
    ],
    name: "submitAppealVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0346100cf57601f6111bf38819003918201601f19168301916001600160401b038311848410176100d4578084926080946040528339810103126100cf57610047816100ea565b90610054602082016100ea565b61006c6060610065604085016100ea565b93016100ea565b60809390935260a05260c052600080546001600160a01b0319166001600160a01b039092169190911790556040516110c090816100ff823960805181818161040b015281816104d00152610d00015260a0518161044b015260c05181610ab40152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100cf5756fe6080604052600436101561001257600080fd5b60003560e01c8063051df14714610d2f5780631099ae0a14610cea578063261b96aa14610bfb57806328cdc02814610b7357806345a9a28914610b145780634f18eeb514610ae35780635aa6e67514610a9e57806360055e741461098d57806373450cbd14610819578063a9dbc45e1461047a578063d43da40a14610435578063ddbbc88f146103b8578063f806a702146100e45763f851a440146100b657600080fd5b346100df5760003660031901126100df576000546040516001600160a01b039091168152602090f35b600080fd5b346100df5760403660031901126100df576000546001600160a01b0316330361038657600435600052600360205261012360ff60406000205416611034565b604051608081018181106001600160401b0382111761034457604052600381526020810160603682378151156103705773123456789012345678901234567890123456789090528051906001918210156103705773234567890123456789012345678901234567890160408201528051600210156103705773345678901234567890123456789012345678901260608201526203f48042019081421161035a576040516101cf81610efb565b8181526001600160401b038316602082015260026040820152600060608201526000608082015260043560005260026020526040600020938151948551956001600160401b03871161034457680100000000000000008711610344576020908254888455808910610327575b5001958160005260206000209660005b82811061030b575050507fc19416c4d9578503a3d70eba88cab58b1e98a39b00b04482b4f06195314a42cb94955001906001600160401b036020820151169082549168ff0000000000000000604083015160401b169069ff0000000000000000006060840151151560481b1692608061ffff60501b91015160501b16936bffffffffffffffffffffffff19161717171790556001600160401b036102fa60405192604084526040840190610e69565b9316602082015280600435930390a2005b81516001600160a01b0316818a0155602090910190840161024b565b61033e90846000528984600020918201910161101d565b8861023b565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b6044820152606490fd5b346100df5760403660031901126100df576024356001600160a01b03818116918290036100df576020916004356000526003835260ff60406000205416159182610409575b50506040519015158152f35b7f00000000000000000000000000000000000000000000000000000000000000001614905082806103fd565b346100df5760003660031901126100df576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100df5760603660031901126100df576001600160401b03602435116100df573660236024350112156100df576001600160401b0360243560040135116100df5736602480356004013581350101116100df577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036107df57600435600052600360205260ff604060002054166107a25760405161052281610ee0565b600435815233602082015260405161054a6020601f19601f6024356004013501160182610f16565b60248035600481013580845291016020830137600060206024356004013583010152604082019081526044356060830152426080830152600060a08301526004356000526001602052604060002090825182556001820160018060a01b036020850151166bffffffffffffffffffffffff60a01b825416179055518051906001600160401b038211610344576105e36002840154610ea6565b601f8111610762575b50602090601f83116001146106ed57918060a094926005946000926106e2575b50508160011b916000199060031b1c19161760028201555b60608401516003820155608084015160048201550191015115159060ff199160ff83835416911617905560043560005260036020526001604060002091825416179055604051604081526024356004013560408201526024356004013560248035016060830137600060606024356004013583010152604435602082015233907f63a37df42bd5bfe513f04cc7a6319763042be0fb516d05055b1d2add7ab1dac260043591606081601f19601f6024356004013501168101030190a3005b01519050868061060c565b906002840160005260206000209160005b601f198516811061074a57509260a0949260019260059583601f19811610610731575b505050811b016002820155610624565b015160001960f88460031b161c19169055868080610721565b919260206001819286850151815501940192016106fe565b61079290600285016000526020600020601f850160051c81019160208610610798575b601f0160051c019061101d565b846105ec565b9091508190610785565b60405162461bcd60e51b815260206004820152601560248201527441707065616c20616c72656164792065786973747360581b6044820152606490fd5b60405162461bcd60e51b81526020600482015260126024820152714f6e6c7920636c61696d7320656e67696e6560701b6044820152606490fd5b346100df576020806003193601126100df576004356000608060405161083e81610efb565b6060815282858201528260408201528260608201520152806000526003825261086e60ff60406000205416611034565b60005260028152604060002060405161088681610efb565b6040518084845491828152019084600052856000209060005b81811061097057505050816108b5910382610f16565b8152600180920154838201936001600160401b03948583168152604084019560ff8460401c168752606085019160ff8560481c1615158352608086019361ffff809660501c1685526040519781895260c0890197519760a0838b015288518091528260e08b0199019260005b8281106109545750505050509660ff91879851166040880152511660608601525115156080850152511660a08301520390f35b84516001600160a01b03168b5299810199938101938301610921565b82546001600160a01b03168452928701926001928301920161089f565b346100df576020806003193601126100df57600435600060a06040516109b281610ee0565b828152828582015260606040820152826060820152826080820152015280600052600382526109e860ff60406000205416611034565b60005260018152604060002060405190610a0182610ee0565b8054825260018101546001600160a01b039081168484019081529091610a85610a2c60028301610f37565b604086019081526003830154946060870195865260ff600560048601549560808a019687520154169460a088019515158652604051988998818a525190890152511660408701525160c0606087015260e0860190610fdd565b925160808501525160a084015251151560c08301520390f35b346100df5760003660031901126100df576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100df5760203660031901126100df576004356000526003602052602060ff604060002054166040519015158152f35b346100df5760203660031901126100df576004356000526002602052608060016040600020015461ffff604051916001600160401b038116835260ff8160401c16602084015260ff8160481c161515604084015260501c166060820152f35b346100df5760203660031901126100df5760043560005260016020526040600020805460018060a01b0360018301541691610bb060028201610f37565b600382015491610be560ff6005600484015493015416926040519687968752602087015260c0604087015260c0860190610fdd565b9260608501526080840152151560a08301520390f35b346100df5760403660031901126100df576024803560ff908181168091036100df57610c2681611073565b610c336040519182610f16565b818152601f19610c4283611073565b0190602091368383013760005b8481169084821015610cd35781611000019161ffff90818411610cbe5784511115610ca95786921684611fe08360051b168501015216848114610c9457600101610c4f565b85634e487b7160e01b60005260116004526000fd5b87634e487b7160e01b60005260326004526000fd5b88634e487b7160e01b60005260116004526000fd5b60405184815280610ce681870186610e69565b0390f35b346100df5760003660031901126100df576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100df5760803660031901126100df5760043560243561ffff8082168092036100df57604435908116036100df5781600052602060038152610d7960ff60406000205416611034565b82600052600281526001600160401b03600160406000200154164211610e2c57826000526002815260ff60016040600020015460481c16610de8577fc81bddace61451de9664f506cf632bc64ab2378590a8c6010202b012e2affe8691604091825191808352151590820152a2005b6064906040519062461bcd60e51b82526004820152601860248201527f41707065616c20616c726561647920636f6e636c7564656400000000000000006044820152fd5b6064906040519062461bcd60e51b825260048201526016602482015275159bdd1a5b99c8191958591b1a5b99481c185cdcd95960521b6044820152fd5b90815180825260208080930193019160005b828110610e89575050505090565b83516001600160a01b031685529381019392810192600101610e7b565b90600182811c92168015610ed6575b6020831014610ec057565b634e487b7160e01b600052602260045260246000fd5b91607f1691610eb5565b60c081019081106001600160401b0382111761034457604052565b60a081019081106001600160401b0382111761034457604052565b90601f801991011681019081106001600160401b0382111761034457604052565b9060405191826000825492610f4b84610ea6565b908184526001948581169081600014610fba5750600114610f77575b5050610f7592500383610f16565b565b9093915060005260209081600020936000915b818310610fa2575050610f7593508201013880610f67565b85548884018501529485019487945091830191610f8a565b915050610f7594506020925060ff191682840152151560051b8201013880610f67565b919082519283825260005b848110611009575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610fe8565b818110611028575050565b6000815560010161101d565b1561103b57565b60405162461bcd60e51b815260206004820152601060248201526f105c1c19585b081b9bdd08199bdd5b9960821b6044820152606490fd5b6001600160401b0381116103445760051b6020019056fea26469706673582212204374eebdf2d340833d62f7f1ecaea08c09b6877271024aaef758e6f2378d942464736f6c63430008140033";

type AppealSystemImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AppealSystemImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AppealSystemImpl__factory extends ContractFactory {
  constructor(...args: AppealSystemImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _claimsEngine: AddressLike,
    _juryOracle: AddressLike,
    _governance: AddressLike,
    _admin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _claimsEngine,
      _juryOracle,
      _governance,
      _admin,
      overrides || {}
    );
  }
  override deploy(
    _claimsEngine: AddressLike,
    _juryOracle: AddressLike,
    _governance: AddressLike,
    _admin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _claimsEngine,
      _juryOracle,
      _governance,
      _admin,
      overrides || {}
    ) as Promise<
      AppealSystemImpl & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AppealSystemImpl__factory {
    return super.connect(runner) as AppealSystemImpl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AppealSystemImplInterface {
    return new Interface(_abi) as AppealSystemImplInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AppealSystemImpl {
    return new Contract(address, _abi, runner) as unknown as AppealSystemImpl;
  }
}
